name: Verify Testnet (Etherscan V2)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  verify:
    # secret मौजूद हो तभी जॉब चले
    if: ${{ secrets.ETHERSCAN_API_KEY != '' }}
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Pin Hardhat & Toolbox versions
        run: |
          npm pkg set devDependencies.hardhat=2.26.3
          npm pkg set devDependencies["@nomicfoundation/hardhat-toolbox"]=6.1.0
          npm pkg set devDependencies.typescript=5.4.5
          npm pkg set devDependencies.ts-node=10.9.1
          npm pkg set devDependencies["@types/node"]=20.11.30
          npm pkg set dependencies["@openzeppelin/contracts"]=5.0.2

      - name: Install deps
        run: npm i

      - name: Compile
        run: npx hardhat compile

      - name: Show addresses/testnet.json
        run: |
          test -f addresses/testnet.json || (echo "::error file=addresses/testnet.json::Missing file"; exit 1)
          cat addresses/testnet.json

      - name: Verify (Etherscan V2 / chainid=97)
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          # नीचे दो वैरिएबल ज़रूर सेट कर दें (Repo Variables में):
          DEPLOYER_ADDR: ${{ vars.DEPLOYER_ADDR }}
          USDT_DECIMALS_TESTNET: ${{ vars.USDT_DECIMALS_TESTNET }}
        run: |
          set -euo pipefail
          # Node one-liners to pull addresses safely
          NBL=$(node -p "require('./addresses/testnet.json').NBL")
          REG=$(node -p "require('./addresses/testnet.json').REG")
          TREE=$(node -p "require('./addresses/testnet.json').TREE")
          POOL=$(node -p "require('./addresses/testnet.json').POOL")
          USDT=$(node -p "require('./addresses/testnet.json').USDT || ''")
          SALE=$(node -p "require('./addresses/testnet.json').SALE || ''")

          echo "Using:"
          echo "NBL=$NBL"
          echo "REG=$REG"
          echo "TREE=$TREE"
          echo "POOL=$POOL"
          echo "USDT=$USDT"
          echo "SALE=$SALE"
          echo "DEPLOYER_ADDR=$DEPLOYER_ADDR"

          # --- Constructor args (same as deploy_testnet.ts) ---
          # cap = 10_000_000_000 * 1e18, bonusCap = cap/10
          CAP=10000000000000000000000000000
          BONUS=1000000000000000000000000000

          # Verify Token
          npx hardhat verify --network bscTestnet $NBL $DEPLOYER_ADDR $CAP $BONUS

          # Verify PartnerRegistry(admin), PartnerTree(admin)
          npx hardhat verify --network bscTestnet $REG $DEPLOYER_ADDR
          npx hardhat verify --network bscTestnet $TREE $DEPLOYER_ADDR

          # Verify PoolVault(admin, usdt)
          if [ -n "$USDT" ]; then
            npx hardhat verify --network bscTestnet $POOL $DEPLOYER_ADDR $USDT
          else
            echo "USDT address missing in addresses/testnet.json; skipping PoolVault verify"
          fi

          # SALE constructor बहुत बड़ा है; बाद में स्क्रिप्टेड-verify करेंगे।
          # Hardhat/Etherscan V2 docs: single key + chainid=97 route to BSC Testnet.
