name: Verify (BSC Testnet)

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Deploy Testnet (Hardhat)"]
    types: [completed]

jobs:
  verify:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    # secrets/vars job env में लाएँ; step-level 'if' में env.* read होगा
    env:
      DEPLOYER_KEY: ${{ secrets.DEPLOYER_KEY }}
      RPC_BSC_TESTNET: ${{ secrets.RPC_BSC_TESTNET }}
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}  # optional (MultiChain)
      BSCSCAN_KEY: ${{ secrets.BSCSCAN_KEY }}              # optional (BscScan)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Pin Hardhat & Toolbox versions
        run: |
          npm pkg set devDependencies.hardhat=2.26.3
          npm pkg set devDependencies["@nomicfoundation/hardhat-toolbox"]=6.1.0
          npm pkg set devDependencies.typescript=5.4.5
          npm pkg set devDependencies.ts-node=10.9.1
          npm pkg set devDependencies["@types/node"]=20.11.30
          npm pkg set dependencies["@openzeppelin/contracts"]=5.0.2

      - name: Force CommonJS (package.json + tsconfig)
        run: |
          node -e "let fs=require('fs');let p=JSON.parse(fs.readFileSync('package.json','utf8'));p.type='commonjs';fs.writeFileSync('package.json',JSON.stringify(p,null,2));"
          sed -i 's/"module": *"NodeNext"/"module": "commonjs"/' tsconfig.json || true
          sed -i 's/"moduleResolution": *"NodeNext"/"moduleResolution": "node"/' tsconfig.json || true

      - name: Install deps
        run: npm i

      - name: Compile
        run: npx hardhat clean && npx hardhat compile

      - name: Load deployed addresses → $GITHUB_ENV
        run: |
          if [ ! -f addresses/testnet.json ]; then
            echo "HAS_ADDRS=0" >> $GITHUB_ENV
            echo "No addresses/testnet.json found. Skipping verification."
            exit 0
          fi
          echo "HAS_ADDRS=1" >> $GITHUB_ENV
          for k in NBL REG TREE POOL USDT; do
            echo "$k=$(node -e "let a=require('./addresses/testnet.json');console.log(a['$k']||'')")" >> $GITHUB_ENV
          done
          # Admin used at deploy (your deployer)
          echo "ADMIN=0xE77F94010Fb3B01431E18015A1c9A56F74e79998" >> $GITHUB_ENV

      - name: Decide if we have any API key
        run: |
          if [ -n "$ETHERSCAN_API_KEY" ] || [ -n "$BSCSCAN_KEY" ]; then
            echo "HAS_API=1" >> $GITHUB_ENV
          else
            echo "HAS_API=0" >> $GITHUB_ENV
          fi

      - name: Verify NBLToken
        if: env.HAS_API == '1' && env.HAS_ADDRS == '1' && env.NBL != ''
        run: |
          # constructor: (admin, cap, bonusCap)
          npx hardhat verify --network bscTestnet \
            "$NBL" \
            "$ADMIN" \
            "10000000000000000000000000000" \
            "1000000000000000000000000000"

      - name: Verify PartnerRegistry
        if: env.HAS_API == '1' && env.HAS_ADDRS == '1' && env.REG != ''
        run: npx hardhat verify --network bscTestnet "$REG" "$ADMIN"

      - name: Verify PartnerTree
        if: env.HAS_API == '1' && env.HAS_ADDRS == '1' && env.TREE != ''
        run: npx hardhat verify --network bscTestnet "$TREE" "$ADMIN"

      - name: Verify PoolVault
        if: env.HAS_API == '1' && env.HAS_ADDRS == '1' && env.POOL != '' && env.USDT != ''
        run: npx hardhat verify --network bscTestnet "$POOL" "$ADMIN" "$USDT"

      - name: Skip (no API key)
        if: env.HAS_API != '1'
        run: echo "Skipping verification: no API key present."
