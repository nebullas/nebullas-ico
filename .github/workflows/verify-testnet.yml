name: Verify Testnet (Etherscan)

on:
  workflow_dispatch:

jobs:
  verify:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    env:
      # RPC (testnet) और Etherscan key Actions Secrets में रखें
      RPC_BSC_TESTNET: ${{ secrets.RPC_BSC_TESTNET }}
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

      # Fallbacks (bash में override कर देंगे अगर Org/Repo VAR दिए हों)
      TREASURY_FALLBACK: "0x05A5bc620D55708776c8B52f38A3F5bf0b9DC420"
      ADMIN_FALLBACK:    "0xE77F94010Fb3B01431E18015A1c9A56F74e79998"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install deps
        run: npm ci || npm i

      - name: Read deployed addresses
        run: |
          test -f addresses/testnet.json && cat addresses/testnet.json || true
          echo "SALE=$(jq -r .SALE addresses/testnet.json)"  >> $GITHUB_ENV
          echo "NBL=$(jq -r .NBL addresses/testnet.json)"    >> $GITHUB_ENV
          echo "USDT=$(jq -r .USDT addresses/testnet.json)"  >> $GITHUB_ENV
          echo "REG=$(jq -r .REG addresses/testnet.json)"    >> $GITHUB_ENV
          echo "TREE=$(jq -r .TREE addresses/testnet.json)"  >> $GITHUB_ENV
          echo "POOL=$(jq -r .POOL addresses/testnet.json)"  >> $GITHUB_ENV

      - name: Verify via Etherscan (only if key present)
        shell: bash
        run: |
          if [ -z "${ETHERSCAN_API_KEY}" ]; then
            echo "ETHERSCAN_API_KEY not set → skipping Etherscan verification."; exit 0;
          fi

          # Org/Repo variables (optional); खाली हों तो fallback लगाओ
          TREASURY="${{ vars.TREASURY }}"
          [ -z "$TREASURY" ] && TREASURY="${TREASURY_FALLBACK}"

          ADMIN="${{ vars.DEPLOYER_ADDRESS }}"
          [ -z "$ADMIN" ] && ADMIN="${ADMIN_FALLBACK}"

          # Hard defaults matching deploy script
          USDT_DEC=18
          MIN_WEI="50000000000000000000"         # 50 * 1e18
          MAX_WEI="10000000000000000000000"      # 10000 * 1e18
          PERMIT2="0x0000000000000000000000000000000000000000"

          echo "Using:"
          echo "  SALE=$SALE"
          echo "  NBL=$NBL"
          echo "  USDT=$USDT"
          echo "  REG=$REG"
          echo "  TREE=$TREE"
          echo "  POOL=$POOL"
          echo "  TREASURY=$TREASURY"
          echo "  ADMIN=$ADMIN"

          # Constructor args for NBLSaleV5
          cat > args-sale.js <<EOF
module.exports = [
  "${ADMIN}",
  "${NBL}",
  "${USDT}",
  "${REG}",
  "${TREE}",
  "${POOL}",
  "${TREASURY}",
  ${USDT_DEC},
  0,
  "${MIN_WEI}",
  "${MAX_WEI}",
  "${PERMIT2}"
];
EOF

          echo "=== args-sale.js ==="; cat args-sale.js

          # Best-effort verify (फेल हो तो pipeline न तोड़े)
          npx hardhat verify --network bscTestnet --constructor-args args-sale.js ${SALE} \
          || echo "Etherscan verification failed (likely API/key mismatch). Skipping as non-fatal."
