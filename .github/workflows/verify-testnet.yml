name: Verify Testnet (Etherscan V2)

on:
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  verify:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Pin Hardhat & Toolbox versions
        run: |
          npm pkg set devDependencies.hardhat=2.26.3
          npm pkg set devDependencies["@nomicfoundation/hardhat-toolbox"]=6.1.0
          npm pkg set devDependencies.typescript=5.4.5
          npm pkg set devDependencies.ts-node=10.9.1
          npm pkg set devDependencies["@types/node"]=20.11.30
          npm pkg set dependencies["@openzeppelin/contracts"]=5.0.2

      - name: Force CommonJS (package.json + tsconfig)
        run: |
          node -e "let fs=require('fs');let p=JSON.parse(fs.readFileSync('package.json','utf8'));p.type='commonjs';fs.writeFileSync('package.json',JSON.stringify(p,null,2));"
          sed -i 's/"module": *"NodeNext"/"module": "commonjs"/' tsconfig.json || true
          sed -i 's/"moduleResolution": *"NodeNext"/"moduleResolution": "node"/' tsconfig.json || true

      - name: Install deps
        run: npm i

      - name: Compile
        run: npx hardhat compile

      # addresses/testnet.json → $GITHUB_ENV  (quoted heredoc; shell expansion नहीं होगा)
      - name: Load addresses from addresses/testnet.json
        run: |
          test -f addresses/testnet.json || { echo "addresses/testnet.json missing"; exit 1; }
          node <<'NODE'
          const fs = require('fs');
          const a = JSON.parse(fs.readFileSync('addresses/testnet.json','utf8'));
          const need = ['USDT','NBL','REG','TREE','POOL','SALE'];
          for (const k of need) {
            if (!a[k]) { console.error('Missing', k); process.exit(2); }
            fs.appendFileSync(process.env.GITHUB_ENV, `${k}=${a[k]}\n`);
          }
          fs.appendFileSync(process.env.GITHUB_ENV, `ADMIN=0xE77F94010Fb3B01431E18015A1c9A56F74e79998\n`);
          fs.appendFileSync(process.env.GITHUB_ENV, `TREASURY=${process.env.TREASURY || '0x05A5bc620D55708776c8B52f38A3F5bf0b9DC420'}\n`);
          fs.appendFileSync(process.env.GITHUB_ENV, `PERMIT2=${process.env.PERMIT2 || '0x0000000000000000000000000000000000000000'}\n`);
          NODE

      # केवल तभी verify चलाएँ जब key मौजूद हो; नहीं तो step skip (job हरा रहेगा)
      - name: Verify (Etherscan V2)
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        if: ${{ env.ETHERSCAN_API_KEY != '' }}
        run: |
          echo "Using Etherscan V2 key (masked)."
          # NBLToken(admin, cap, bonusCap)
          npx hardhat verify --network bscTestnet "$NBL" \
            "$ADMIN" \
            "10000000000000000000000000000" \
            "1000000000000000000000000000"

          # PartnerRegistry(admin)
          npx hardhat verify --network bscTestnet "$REG" "$ADMIN"

          # PartnerTree(admin)
          npx hardhat verify --network bscTestnet "$TREE" "$ADMIN"

          # PoolVault(admin, usdt)
          npx hardhat verify --network bscTestnet "$POOL" "$ADMIN" "$USDT"

          # NBLSaleV5(admin,nbl,usdt,reg,tree,pool,treasury,usdtDecimals,mode,min,max,permit2)
          npx hardhat verify --network bscTestnet "$SALE" \
            "$ADMIN" "$NBL" "$USDT" "$REG" "$TREE" "$POOL" \
            "$TREASURY" "18" "0" \
            "50000000000000000000" "10000000000000000000000" \
            "$PERMIT2"

      - name: Skip note (no API key)
        if: ${{ env.ETHERSCAN_API_KEY == '' }}
        run: echo "No ETHERSCAN_API_KEY in secrets; skipping verify step."
