name: Verify Testnet (BscScan optional)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  verify:
    runs-on: ubuntu-24.04
    env:
      NODE_VERSION: 22

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Pin Hardhat & Toolbox versions
        run: |
          npm pkg set "devDependencies.hardhat=2.26.3"
          npm pkg set "devDependencies.@nomicfoundation/hardhat-toolbox=6.1.0"
          npm pkg set "devDependencies.typescript=5.4.5"
          npm pkg set "devDependencies.ts-node=10.9.1"
          npm pkg set "devDependencies.@types/node=20.11.30"
          npm pkg set "dependencies.@openzeppelin/contracts=5.0.2"

      - name: Force CommonJS (package.json + tsconfig)
        run: |
          node -e "let fs=require('fs');let p=JSON.parse(fs.readFileSync('package.json','utf8'));p.type='commonjs';fs.writeFileSync('package.json',JSON.stringify(p,null,2));"
          sed -i 's/"module": *"NodeNext"/"module": "commonjs"/' tsconfig.json || true
          sed -i 's/"moduleResolution": *"NodeNext"/"moduleResolution": "node"/' tsconfig.json || true
          node -e "let fs=require('fs');let p=JSON.parse(fs.readFileSync('package.json','utf8')); if(p.type==='module'){process.exit(1)}"

      - name: Install deps
        run: npm i

      - name: Compile
        run: npx hardhat compile

      # Secrets/vars को $GITHUB_ENV में materialize करें — top-level 'if: secrets…' से YAML error आता था
      - name: Prepare env (.env + keys)
        env:
          RPC_IN: ${{ secrets.RPC_BSC_TESTNET }}
          BSCSCAN_IN: ${{ secrets.BSCSCAN_KEY }}
        run: |
          echo "RPC_BSC_TESTNET=${RPC_IN:-https://bsc-testnet.publicnode.com}" >> $GITHUB_ENV
          echo "BSCSCAN_KEY=${BSCSCAN_IN:-}" >> $GITHUB_ENV
          cat > .env <<EOF
          RPC_BSC_TESTNET=${RPC_IN:-https://bsc-testnet.publicnode.com}
          BSCSCAN_KEY=${BSCSCAN_IN:-}
          EOF

      - name: Load addresses/testnet.json
        run: |
          test -f addresses/testnet.json
          echo "SALE=$(jq -r '.SALE' addresses/testnet.json)" >> $GITHUB_ENV
          echo "NBL=$(jq -r '.NBL' addresses/testnet.json)" >> $GITHUB_ENV
          echo "REG=$(jq -r '.REG' addresses/testnet.json)" >> $GITHUB_ENV
          echo "TREE=$(jq -r '.TREE' addresses/testnet.json)" >> $GITHUB_ENV
          echo "POOL=$(jq -r '.POOL' addresses/testnet.json)" >> $GITHUB_ENV

      # केवल तभी verify करें जब BscScan key मौजूद हो; वरना step gracefully skip
      - name: Verify (BscScan)
        if: env.BSCSCAN_KEY != ''
        run: |
          npx hardhat verify --network bscTestnet $SALE
          npx hardhat verify --network bscTestnet $NBL
          npx hardhat verify --network bscTestnet $REG
          npx hardhat verify --network bscTestnet $TREE
          npx hardhat verify --network bscTestnet $POOL

      - name: No BscScan key → skip verify
        if: env.BSCSCAN_KEY == ''
        run: echo "No BscScan API key; skipping on-chain source verification (Sourcify/Etherscan)."
