name: Verify Testnet (Sourcify + Etherscan V2 fallback)

on:
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  verify:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Pin Hardhat & Toolbox versions
        run: |
          npm pkg set devDependencies.hardhat=2.26.3
          npm pkg set devDependencies["@nomicfoundation/hardhat-toolbox"]=6.1.0
          npm pkg set devDependencies.typescript=5.4.5
          npm pkg set devDependencies.ts-node=10.9.1
          npm pkg set devDependencies["@types/node"]=20.11.30
          npm pkg set dependencies["@openzeppelin/contracts"]=5.0.2

      - name: Install deps
        run: npm i

      - name: Compile
        run: npx hardhat compile

      # addresses/testnet.json â†’ $GITHUB_ENV  (quoted heredoc; no shell expansion)
      - name: Load addresses from addresses/testnet.json
        run: |
          test -f addresses/testnet.json || { echo "addresses/testnet.json missing"; exit 1; }
          node <<'NODE'
          const fs = require('fs');
          const a  = JSON.parse(fs.readFileSync('addresses/testnet.json','utf8'));
          const req = ['USDT','NBL','REG','TREE','POOL','SALE'];
          for (const k of req) {
            if (!a[k]) { console.error('Missing', k); process.exit(2); }
            fs.appendFileSync(process.env.GITHUB_ENV, `${k}=${a[k]}\n`);
          }
          // optional ADMIN from JSON
          if (a.ADMIN) fs.appendFileSync(process.env.GITHUB_ENV, `ADMIN=${a.ADMIN}\n`);
          NODE

      # ðŸ”¹ Sourcify-first (no key required): enable via hardhat.config.ts (we already did)
      - name: Verify via Sourcify (no key)
        run: |
          npx hardhat verify --network bscTestnet "$USDT" || true
          npx hardhat verify --network bscTestnet "$NBL"  || true
          npx hardhat verify --network bscTestnet "$REG"  || true
          npx hardhat verify --network bscTestnet "$TREE" || true
          npx hardhat verify --network bscTestnet "$POOL" || true
          npx hardhat verify --network bscTestnet "$SALE" || true

      # ðŸ”¹ Etherscan fallback (only if key present) â€” Invalid key à¤ªà¤° à¤­à¥€ job break à¤¨ à¤•à¤°à¥‡à¤‚
      - name: Verify via Etherscan (V2)
        if: ${{ secrets.ETHERSCAN_API_KEY != '' }}
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          TREASURY: '0x05A5bc620D55708776c8B52f38A3F5bf0b9DC420'
          USDT_DECIMALS_TESTNET: '18'
          DEPLOYER_ADDR: '0xE77F94010Fb3B01431E18015A1c9A56F74e79998'
        run: |
          set -e
          node -v && npx hardhat --version
          # Use TS helper to verify with exact constructor args (doesn't need signer)
          npx hardhat run scripts/verify_testnet.ts --network bscTestnet || true

      - name: Done
        run: echo "Verification flow finished (Sourcify first; Etherscan attempted if key present)."
