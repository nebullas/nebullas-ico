name: Verify Testnet (Sourcify + Etherscan)

on:
  workflow_dispatch: {}

jobs:
  verify:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 22 }

      # deps (पिन्ड वर्ज़न्स ताकि टूटे नहीं)
      - run: |
          npm pkg set devDependencies.hardhat=2.26.3
          npm pkg set devDependencies["@nomicfoundation/hardhat-toolbox"]=6.1.0
          npm pkg set devDependencies.typescript=5.4.5
          npm pkg set devDependencies.ts-node=10.9.1
          npm pkg set devDependencies["@types/node"]=20.11.30
          npm pkg set dependencies["@openzeppelin/contracts"]=5.0.2
          npm i

      - name: Compile
        run: npx hardhat compile

      # --- Sourcify (API‑less) ---
      - name: Verify via Sourcify (multi-chain)
        env:
          RPC_BSC_TESTNET: ${{ secrets.RPC_BSC_TESTNET }}
        run: |
          node - <<'NODE'
          const fs=require('fs'), cp=require('child_process');
          const a=JSON.parse(fs.readFileSync('addresses/testnet.json','utf8'));
          const list=[["NBLToken",a.NBL],["PartnerRegistry",a.REG],["PartnerTree",a.TREE],["PoolVault",a.POOL],["NBLSaleV5",a.SALE]];
          for(const [name,addr] of list){
            // sourcify-cli नहीं, हार्डहैट आर्टिफैक्ट + sourcify API auto-upload (toolbox support)
            // Hardhat toolbox 6.1 में sourcify टास्क नहीं है; इसलिए metadata/artifacts out-of-box publish:
            // न चलने पर भी स्टेप soft-fail न करें:
            try { cp.execSync(`npx hardhat verify --network bscTestnet ${addr}`, {stdio:'inherit'}); } catch(e){ console.log("sourcify/etherscan fallback path will try below or skip."); }
          }
          NODE

      # --- Etherscan (optional) ---
      - name: Verify via Etherscan (only if key present)
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        run: |
          if [ -n "${ETHERSCAN_API_KEY}" ]; then
            echo "Etherscan key present: running verifies…"
            node - <<'NODE'
            const fs=require('fs'), {execSync}=require('child_process');
            const a=JSON.parse(fs.readFileSync('addresses/testnet.json','utf8'));
            // Constructor args reconstruction (mirror of scripts/deploy_testnet.ts)
            const cap = (10n**18n) * 10000000000n;
            const bonus = cap/10n;

            const cmds = [
              // NBLToken(admin, cap, bonus)
              `npx hardhat verify --network bscTestnet ${a.NBL} ${a.Deployer} ${cap.toString()} ${bonus.toString()}`,
              // PartnerRegistry(admin)
              `npx hardhat verify --network bscTestnet ${a.REG} ${a.Deployer}`,
              // PartnerTree(admin)
              `npx hardhat verify --network bscTestnet ${a.TREE} ${a.Deployer}`,
              // PoolVault(admin, usdt)
              `npx hardhat verify --network bscTestnet ${a.POOL} ${a.Deployer} ${a.USDT}`,
              // NBLSaleV5(admin,nbl,usdt,reg,tree,pool,treasury,usdtDec,mode,min,max,permit2)
              `npx hardhat verify --network bscTestnet ${a.SALE} ${a.Deployer} ${a.NBL} ${a.USDT} ${a.REG} ${a.TREE} ${a.POOL} ${a.TREASURY} 18 0 ${a.MinUSDT} ${a.MaxUSDT} 0x0000000000000000000000000000000000000000`
            ];
            for(const c of cmds){ try { console.log(">",c); execSync(c,{stdio:'inherit'});} catch(e){ console.log("verify failed (non-blocking):",c); } }
            NODE
          else
            echo "No ETHERSCAN_API_KEY → skipping Etherscan verifies."
          fi
