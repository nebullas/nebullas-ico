name: Verify Testnet (BscScan/Sourcify-ready)

on:
  workflow_dispatch:
    inputs:
      usdt:
        description: 'USDT (mUSDT) address 0x…'
        type: string
        required: true
      nbl:
        description: 'NBLToken address 0x…'
        type: string
        required: true
      reg:
        description: 'PartnerRegistry address 0x…'
        type: string
        required: true
      tree:
        description: 'PartnerTree address 0x…'
        type: string
        required: true
      pool:
        description: 'PoolVault address 0x…'
        type: string
        required: true
      sale:
        description: 'NBLSaleV5 address 0x…'
        type: string
        required: true

jobs:
  verify:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    # ❗️secrets को सीधे if: में नहीं—पहले env में map करें, फिर if में env.* यूज़ करें
    env:
      # Inputs → ENV (addresses quoted to avoid YAML hex-int)
      USDT: '${{ inputs.usdt }}'
      NBL:  '${{ inputs.nbl }}'
      REG:  '${{ inputs.reg }}'
      TREE: '${{ inputs.tree }}'
      POOL: '${{ inputs.pool }}'
      SALE: '${{ inputs.sale }}'

      # Deploy script के कॉन्स्टैंट्स (logs confirm same params)
      ADMIN: '0xE77F94010Fb3B01431E18015A1c9A56F74e79998'
      TREASURY: '${{ vars.TREASURY || "0x05A5bc620D55708776c8B52f38A3F5bf0b9DC420" }}'
      USDT_DEC: '18'
      CAP:   '10000000000000000000000000000'   # 10_000_000_000 * 1e18
      BONUS: '1000000000000000000000000000'    # 10% of CAP
      MIN:   '50000000000000000000'            # 50 * 1e18
      MAX:   '10000000000000000000000'         # 10_000 * 1e18
      PERMIT2: '0x0000000000000000000000000000000000000000'

      # Etherscan V2 Multichain key (optional)
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Pin Hardhat & Toolbox versions
        run: |
          npm pkg set devDependencies.hardhat=2.26.3
          npm pkg set devDependencies["@nomicfoundation/hardhat-toolbox"]=6.1.0
          npm pkg set devDependencies.typescript=5.4.5
          npm pkg set devDependencies.ts-node=10.9.1
          npm pkg set devDependencies["@types/node"]=20.11.30
          npm pkg set dependencies["@openzeppelin/contracts"]=5.0.2

      - name: Install deps
        run: npm i

      - name: Compile
        run: npx hardhat compile

      # ✅ अब 'secrets' को if: में सीधे यूज़ नहीं; env से जाँच
      - name: Etherscan verify (runs only if API key present)
        if: ${{ env.ETHERSCAN_API_KEY != '' }}
        run: |
          echo "Using ETHERSCAN_API_KEY (present)."
          # MockUSDT (uint8 decimals)
          npx hardhat verify --network bscTestnet "$USDT" $USDT_DEC
          # NBLToken (admin, cap, bonusCap)
          npx hardhat verify --network bscTestnet "$NBL" "$ADMIN" "$CAP" "$BONUS"
          # PartnerRegistry(admin)
          npx hardhat verify --network bscTestnet "$REG" "$ADMIN"
          # PartnerTree(admin)
          npx hardhat verify --network bscTestnet "$TREE" "$ADMIN"
          # PoolVault(admin, usdt)
          npx hardhat verify --network bscTestnet "$POOL" "$ADMIN" "$USDT"
          # NBLSaleV5 full constructor
          npx hardhat verify --network bscTestnet "$SALE" "$ADMIN" "$NBL" "$USDT" "$REG" "$TREE" "$POOL" "$TREASURY" $USDT_DEC 0 "$MIN" "$MAX" "$PERMIT2"

      - name: Finish (no‑op if key absent)
        run: |
          echo "Verify flow finished (Etherscan step skipped if no key)."
          echo "USDT=$USDT"
          echo "NBL=$NBL"
          echo "REG=$REG"
          echo "TREE=$TREE"
          echo "POOL=$POOL"
          echo "SALE=$SALE"
