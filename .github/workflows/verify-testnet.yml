name: Verify Testnet (BscScan/Sourcify)

on:
  workflow_dispatch:
    inputs:
      USDT:
        description: "USDT (Mock on testnet) address"
        required: false
        default: ""
      NBL:
        description: "NBLToken address"
        required: false
        default: ""
      REG:
        description: "PartnerRegistry address"
        required: false
        default: ""
      TREE:
        description: "PartnerTree address"
        required: false
        default: ""
      POOL:
        description: "PoolVault address"
        required: false
        default: ""
      SALE:
        description: "NBLSaleV5 address"
        required: false
        default: ""

permissions:
  contents: read

env:
  RPC_BSC_TESTNET: https://data-seed-prebsc-1-s1.binance.org:8545

jobs:
  verify:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 22 }

      - name: Pin Hardhat & Toolbox versions
        run: |
          npm pkg set devDependencies.hardhat=2.26.3
          npm pkg set devDependencies["@nomicfoundation/hardhat-toolbox"]=6.1.0
          npm pkg set devDependencies.typescript=5.4.5
          npm pkg set devDependencies.ts-node=10.9.1
          npm pkg set devDependencies["@types/node"]=20.11.30
          npm pkg set dependencies["@openzeppelin/contracts"]=5.0.2

      - name: Force CommonJS (package.json + tsconfig)
        run: |
          node -e "let fs=require('fs');let p=JSON.parse(fs.readFileSync('package.json','utf8'));p.type='commonjs';fs.writeFileSync('package.json',JSON.stringify(p,null,2));"
          sed -i 's/"module": *"NodeNext"/"module": "commonjs"/' tsconfig.json || true
          sed -i 's/"moduleResolution": *"NodeNext"/"moduleResolution": "node"/' tsconfig.json || true

      - run: npm i
      - name: Compile
        run: npx hardhat compile
        env:
          RPC_BSC_TESTNET: ${{ env.RPC_BSC_TESTNET }}

      # ---- Sourcify (no API key) ----
      - name: Verify via Sourcify (no key)
        shell: bash
        run: |
          set -e
          addr() { [ -n "$1" ] && npx hardhat verify --verifier sourcify --network bscTestnet "$1" || true; }
          addr "${{ inputs.USDT }}"
          addr "${{ inputs.NBL }}"
          addr "${{ inputs.REG }}"
          addr "${{ inputs.TREE }}"
          addr "${{ inputs.POOL }}"
          addr "${{ inputs.SALE }}"

      # ---- Optional: Etherscan V2 fallback (single key, multichain) ----
      - name: Verify via Etherscan V2 (fallback)
        if: ${{ secrets.ETHERSCAN_API_KEY != '' }}
        shell: bash
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        run: |
          set -e
          v2() { [ -n "$1" ] && npx hardhat verify --network bscTestnet "$1" || true; }
          v2 "${{ inputs.USDT }}"
          v2 "${{ inputs.NBL }}"
          v2 "${{ inputs.REG }}"
          v2 "${{ inputs.TREE }}"
          v2 "${{ inputs.POOL }}"
          v2 "${{ inputs.SALE }}"
