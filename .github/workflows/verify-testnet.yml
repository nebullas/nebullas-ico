name: Verify Testnet (BscScan/Sourcify-ready)

on:
  workflow_dispatch: {}

jobs:
  verify:
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    env:
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}  # Etherscan Multichain key (optional)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Pin Hardhat & Toolbox versions
        run: |
          npm pkg set devDependencies.hardhat=2.26.3
          npm pkg set devDependencies["@nomicfoundation/hardhat-toolbox"]=6.1.0
          npm pkg set devDependencies.typescript=5.4.5
          npm pkg set devDependencies.ts-node=10.9.1
          npm pkg set devDependencies["@types/node"]=20.11.30
          npm pkg set dependencies["@openzeppelin/contracts"]=5.0.2

      - name: Install deps
        run: npm i

      - name: Compile
        run: npx hardhat compile

      - name: Read addresses/testnet.json → env
        run: |
          node -e "const fs=require('fs');const p='addresses/testnet.json';if(!fs.existsSync(p)){process.exit(2)}
          const a=JSON.parse(fs.readFileSync(p,'utf8'));
          const keys=['USDT','NBL','REG','TREE','POOL','SALE','USDT_DECIMALS','ADMIN','TREASURY'];
          for(const k of keys){ if(!a[k]){ console.error('Missing',k); process.exit(3);} }
          for(const k of keys){ fs.appendFileSync(process.env.GITHUB_ENV, `${k}=${a[k]}\n`); }
          console.log('Loaded addresses:', keys.map(k=>`${k}=${a[k]}`).join(' '));"

      - name: Etherscan verify (runs only if API key present)
        if: ${{ env.ETHERSCAN_API_KEY != '' }}
        run: |
          echo "Using ETHERSCAN_API_KEY"
          # MockUSDT/USDT (uint8 decimals)
          npx hardhat verify --network bscTestnet "${USDT}" ${USDT_DECIMALS}
          # NBLToken (admin, cap, bonusCap) — cap/bonus deploy script में स्थिर रहे हैं
          npx hardhat verify --network bscTestnet "${NBL}" "${ADMIN}" "10000000000000000000000000000" "1000000000000000000000000000"
          # PartnerRegistry(admin)
          npx hardhat verify --network bscTestnet "${REG}" "${ADMIN}"
          # PartnerTree(admin)
          npx hardhat verify --network bscTestnet "${TREE}" "${ADMIN}"
          # PoolVault(admin, usdt)
          npx hardhat verify --network bscTestnet "${POOL}" "${ADMIN}" "${USDT}"
          # NBLSaleV5 (admin, nbl, usdt, reg, tree, pool, treasury, usdtDecimals, mode, min, max, permit2)
          npx hardhat verify --network bscTestnet "${SALE}" "${ADMIN}" "${NBL}" "${USDT}" "${REG}" "${TREE}" "${POOL}" "${TREASURY}" ${USDT_DECIMALS} 0 "50000000000000000000" "10000000000000000000000" "0x0000000000000000000000000000000000000000"

      - name: Finish
        run: |
          echo "Verification flow finished (Etherscan step auto-skipped if no key)."
          echo "SALE=${SALE}"
